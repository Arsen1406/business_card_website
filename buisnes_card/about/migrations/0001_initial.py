# Generated by Django 2.2.1 on 2023-04-24 06:09

import django.core.validators
from django.db import migrations, models
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Training',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=512, verbose_name='Название курса')),
                ('school', models.CharField(max_length=512, verbose_name='Название школы')),
                ('begin', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Начало обучения')),
                ('end', models.DateTimeField(blank=True, default=django.utils.timezone.now, null=True, verbose_name='Конец обучения')),
                ('certificate', models.ImageField(blank=True, upload_to='static/img', verbose_name='Диплом')),
            ],
            options={
                'ordering': ['-end'],
            },
        ),
        migrations.CreateModel(
            name='HardSkil',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255, verbose_name='Название технологии')),
                ('description', models.CharField(max_length=1024, null=True, verbose_name='Описание технологии')),
                ('mastered', models.IntegerField(default=1, validators=[django.core.validators.MaxValueValidator(10), django.core.validators.MinValueValidator(1)], verbose_name='Степень освоения')),
                ('pub_date', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Дата добавления')),
                ('icon', models.ImageField(blank=True, null=True, upload_to='static/img', verbose_name='Иконка технологии')),
                ('color', models.CharField(blank=True, max_length=255, null=True)),
                ('course', models.ManyToManyField(related_name='course', to='about.Training', verbose_name='Курс')),
            ],
        ),
    ]
